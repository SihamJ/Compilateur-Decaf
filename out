.data

STR_TRUE: .asciiz "true"
	STR_FALSE: .asciiz "false"
STR_DYN_CHECK: .asciiz "Index Out Of Bound"
	str_0: .asciiz "\nCan you guess the Magic Number between 0 and 100? You have 5 chances!\n"
	str_1: .asciiz "\nEnter your guess\n"
	str_2: .asciiz "A little more!\n"
	str_3: .asciiz "A little less!\n"
	str_4: .asciiz "\nLooser! The number was:\n"
	str_5: .asciiz "Bravo! You won in "
	str_6: .asciiz " rounds!\n"

.text

.globl main

j main

WriteBool:
	lw $a0, 0($sp)
	beqz $a0 Load_False
	Load_True:
	la $a0 STR_TRUE
	j Print_Bool
	Load_False:
	la $a0 STR_FALSE
	Print_Bool:
	li $v0 4
	syscall
	jr $ra

ReadInt:
	li $v0, 5
	syscall
	jr $ra

WriteString:
	li $v0 4
	syscall
	jr $ra

WriteInt:
	lw $a0, 0($sp)
	li $v0, 1
	syscall
	jr $ra

Quit_Program:
	li $v0 10 
	syscall

Out_Of_Bound:
	la $a0 STR_DYN_CHECK
	li $v0 4
	syscall
	j Quit_Program

DYN_CHECK:
	bltz $s0 Quit_Program
	bge $s0 $s1 Quit_Program
	jr $ra

BZero:
	addi $s1 $s1 -1
	sw $zero ($s0)
	addu $s0 $s0 4
	bgtz $s1 BZero
	jr $ra

random:
	move $fp $sp
	li $t0, 0
	sub $sp $sp 4
	sw $t0 ($sp)
	li $t0, 0
	sub $sp $sp 4
	sw $t0 ($sp)
	lw $t0, 12($sp)
	li $t1, 1103
	mult $t0 $t1
	mflo $v0
	sw $v0, 0($sp)
	li $t0, 0
	sub $sp $sp 4
	sw $t0 ($sp)
	lw $t0, 4($sp)
	li $t1, 12345
	add $v0 $t0 $t1
	sw $v0, 0($sp)
	lw $t0, 0($sp)
	sw $t0, 8($sp)
	add $sp $sp 8
	li $t0, 0
	sub $sp $sp 4
	sw $t0 ($sp)
	lw $t0, 4($sp)
	lw $t1, 8($sp)
	div $t0 $t1
	mfhi $v0
	sw $v0, 0($sp)
	lw $v0, 0($sp)
	li $v1, 1
        j fin_random

fin_random:
	addi $s0 $s0 8
	sub $t0 $fp $sp
	add $sp $sp $t0
	jr $ra

main:
	move $fp $sp
	li $t0, 0
	sub $sp $sp 4
	sw $t0 ($sp)
	li $t0, 0
	sub $sp $sp 4
	sw $t0 ($sp)
	li $t0, 0
	sub $sp $sp 4
	sw $t0 ($sp)
	li $t0, 0
	sub $sp $sp 4
	sw $t0 ($sp)
	li $t0, 0
	sub $sp $sp 4
	sw $t0 ($sp)
	li $t0, 476
	sw $t0, 0($sp)
	li $t0, 0
	sub $sp $sp 4
	sw $t0 ($sp)
	move $t0 $ra
	sub $sp $sp 4
	sw $t0 ($sp)
	move $t0 $fp
	sub $sp $sp 4
	sw $t0 ($sp)
	lw $t0, 12($sp)
	sub $sp $sp 4
	sw $t0 ($sp)
	li $t0, 101
	sub $sp $sp 4
	sw $t0 ($sp)
	li $v1, 0
	jal random
	add $sp $sp 8
	lw $t0, 0($sp)
	move $fp $t0
	add $sp $sp 4
	lw $t0, 0($sp)
	move $ra $t0
	add $sp $sp 4
	beqz $v1 Quit_Program
	sw $v0, 0($sp)
	lw $t0, 0($sp)
	sw $t0, 16($sp)
	add $sp $sp 4
	li $t0, 0
	sub $sp $sp 4
	sw $t0 ($sp)
	li $t0, 0
	li $t1, 1
	sub $v0 $t0 $t1
	sw $v0, 0($sp)
	lw $t0, 0($sp)
	sw $t0, 20($sp)
	add $sp $sp 4
	li $t0, 0
	sw $t0, 8($sp)
	li $t0, 1
	sw $t0, 4($sp)
	move $t0 $ra
	sub $sp $sp 4
	sw $t0 ($sp)
	move $t0 $fp
	sub $sp $sp 4
	sw $t0 ($sp)

	la $a0 str_0
	li $v1, 0
	jal WriteString
	lw $t0, 0($sp)
	move $fp $t0
	add $sp $sp 4
	lw $t0, 0($sp)
	move $ra $t0
	add $sp $sp 4
	li $t0, 0
	sub $sp $sp 4
	sw $t0 ($sp)
	li $t0, 0
	sw $t0, 0($sp)
	li $t0, 0
	sub $sp $sp 4
	sw $t0 ($sp)
	li $t0, 4
	sw $t0, 0($sp)

label6:
	lw $t0, 4($sp)
	lw $t1, 0($sp)
        bgt $t0 $t1 label0
	move $t0 $ra
	sub $sp $sp 4
	sw $t0 ($sp)
	move $t0 $fp
	sub $sp $sp 4
	sw $t0 ($sp)

	la $a0 str_1
	li $v1, 0
	jal WriteString
	lw $t0, 0($sp)
	move $fp $t0
	add $sp $sp 4
	lw $t0, 0($sp)
	move $ra $t0
	add $sp $sp 4
	move $t0 $ra
	sub $sp $sp 4
	sw $t0 ($sp)
	move $t0 $fp
	sub $sp $sp 4
	sw $t0 ($sp)
	li $v1, 0
	jal ReadInt
	lw $t0, 0($sp)
	move $fp $t0
	add $sp $sp 4
	lw $t0, 0($sp)
	move $ra $t0
	add $sp $sp 4
	sw $v0, 24($sp)
	lw $t0, 24($sp)
	lw $t1, 20($sp)
        beq $t0 $t1 label1
        j label2

label1:
	li $t0, 1
	sw $t0, 16($sp)
        j label0
	add $sp $sp 0

label2:
	lw $t0, 24($sp)
	lw $t1, 20($sp)
        blt $t0 $t1 label3
        j label4

label3:
	move $t0 $ra
	sub $sp $sp 4
	sw $t0 ($sp)
	move $t0 $fp
	sub $sp $sp 4
	sw $t0 ($sp)

	la $a0 str_2
	li $v1, 0
	jal WriteString
	lw $t0, 0($sp)
	move $fp $t0
	add $sp $sp 4
	lw $t0, 0($sp)
	move $ra $t0
	add $sp $sp 4
	add $sp $sp 0
        j label5

label4:
	move $t0 $ra
	sub $sp $sp 4
	sw $t0 ($sp)
	move $t0 $fp
	sub $sp $sp 4
	sw $t0 ($sp)

	la $a0 str_3
	li $v1, 0
	jal WriteString
	lw $t0, 0($sp)
	move $fp $t0
	add $sp $sp 4
	lw $t0, 0($sp)
	move $ra $t0
	add $sp $sp 4
	add $sp $sp 0

label5:
	li $t0, 0
	sub $sp $sp 4
	sw $t0 ($sp)
	lw $t0, 16($sp)
	li $t1, 1
	add $v0 $t0 $t1
	sw $v0, 0($sp)
	lw $t0, 0($sp)
	sw $t0, 16($sp)
	add $sp $sp 4
	add $sp $sp 0
	lw $t0, 4($sp)
	li $t1, 1
	add $v0 $t0 $t1
	sw $v0, 4($sp)
        j label6

label0:
	add $sp $sp 8
        j label7

label7:
	lw $t0, 8($sp)
	li $t1, 0
        beq $t0 $t1 label8
        j label9

label8:
	move $t0 $ra
	sub $sp $sp 4
	sw $t0 ($sp)
	move $t0 $fp
	sub $sp $sp 4
	sw $t0 ($sp)

	la $a0 str_4
	li $v1, 0
	jal WriteString
	lw $t0, 0($sp)
	move $fp $t0
	add $sp $sp 4
	lw $t0, 0($sp)
	move $ra $t0
	add $sp $sp 4
	move $t0 $ra
	sub $sp $sp 4
	sw $t0 ($sp)
	move $t0 $fp
	sub $sp $sp 4
	sw $t0 ($sp)
	lw $t0, 20($sp)
	sub $sp $sp 4
	sw $t0 ($sp)
	li $v1, 0
	jal WriteInt
	add $sp $sp 4
	lw $t0, 0($sp)
	move $fp $t0
	add $sp $sp 4
	lw $t0, 0($sp)
	move $ra $t0
	add $sp $sp 4
	add $sp $sp 0
        j label10

label9:
	move $t0 $ra
	sub $sp $sp 4
	sw $t0 ($sp)
	move $t0 $fp
	sub $sp $sp 4
	sw $t0 ($sp)

	la $a0 str_5
	li $v1, 0
	jal WriteString
	lw $t0, 0($sp)
	move $fp $t0
	add $sp $sp 4
	lw $t0, 0($sp)
	move $ra $t0
	add $sp $sp 4
	move $t0 $ra
	sub $sp $sp 4
	sw $t0 ($sp)
	move $t0 $fp
	sub $sp $sp 4
	sw $t0 ($sp)
	lw $t0, 12($sp)
	sub $sp $sp 4
	sw $t0 ($sp)
	li $v1, 0
	jal WriteInt
	add $sp $sp 4
	lw $t0, 0($sp)
	move $fp $t0
	add $sp $sp 4
	lw $t0, 0($sp)
	move $ra $t0
	add $sp $sp 4
	move $t0 $ra
	sub $sp $sp 4
	sw $t0 ($sp)
	move $t0 $fp
	sub $sp $sp 4
	sw $t0 ($sp)

	la $a0 str_6
	li $v1, 0
	jal WriteString
	lw $t0, 0($sp)
	move $fp $t0
	add $sp $sp 4
	lw $t0, 0($sp)
	move $ra $t0
	add $sp $sp 4
	add $sp $sp 0

label10:
	add $sp $sp 20

end:
	li $v0, 10
	syscall
