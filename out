.data

STR_TRUE: .asciiz "true"
	STR_FALSE: .asciiz "false"
STR_DYN_CHECK: .asciiz "Index Out Of Bound"
	t: .word 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	t_SIZE: .word 40
	g: .word 0
	str_0: .asciiz "=3\n"

.text

.globl main

j main

WriteBool:
	lw $a0, 0($sp)
	beqz $a0 Load_False
	Load_True:
	la $a0 STR_TRUE
	j Print_Bool
	Load_False:
	la $a0 STR_FALSE
	Print_Bool:
	li $v0 4
	syscall
	jr $ra

ReadInt:
	li $v0, 5
	syscall
	jr $ra

WriteString:
	li $v0 4
	syscall
	jr $ra

WriteInt:
	lw $a0, 0($sp)
	li $v0, 1
	syscall
	jr $ra

Quit_Program:
	li $v0 10 
	syscall

Out_Of_Bound:
	la $a0 STR_DYN_CHECK
	li $v0 4
	syscall
	j Quit_Program

DYN_CHECK:
	bltz $s0 Quit_Program
	bge $s0 $s1 Quit_Program
	jr $ra

BZero:
	addi $s1 $s1 -1
	sw $zero ($s0)
	addu $s0 $s0 4
	bgtz $s1 BZero
	jr $ra
	la $s0 t
	li $s1 10
	jal BZero

main:
	li $t0, 1
	sw $t0, g
	li $t0, 0
	sub $sp $sp 4
	sw $t0 ($sp)
	lw $t0, g
	sw $t0, 0($sp)
	lw $t0, 0($sp)
	li $t1, 4
	mult $t0 $t1
	mflo $v0
	sw $v0, 0($sp)
	lw $t0, 0($sp)
	li $t1, 3
	move $v0 $t1
	move $s0 $t0
	lw $s1 t_SIZE
	move $t2 $ra
	jal DYN_CHECK
	move $ra $t2
	sw $v0 t($t0)
	add $sp $sp 4
	li $t0, 0
	sub $sp $sp 4
	sw $t0 ($sp)
	lw $t0, g
	sw $t0, 0($sp)
	lw $t0, 0($sp)
	li $t1, 4
	mult $t0 $t1
	mflo $v0
	sw $v0, 0($sp)
	li $t0, 0
	sub $sp $sp 4
	sw $t0 ($sp)
	lw $t0, 4($sp)
	move $s0 $t0
	lw $s1 t_SIZE
	move $t2 $ra
	jal DYN_CHECK
	move $ra $t2
	lw $v0 t($t0)
	sw $v0, 0($sp)
	move $t0 $ra
	sub $sp $sp 4
	sw $t0 ($sp)
	lw $t0, 4($sp)
	sub $sp $sp 4
	sw $t0 ($sp)
	li $v1, 0
	jal WriteInt
	add $sp $sp 4
	lw $t0, 0($sp)
	move $ra $t0
	add $sp $sp 4
	move $t0 $ra
	sub $sp $sp 4
	sw $t0 ($sp)

	la $a0 str_0
	li $v1, 0
	jal WriteString
	lw $t0, 0($sp)
	move $ra $t0
	add $sp $sp 4
	add $sp $sp 8

end:
	li $v0, 10
	syscall
